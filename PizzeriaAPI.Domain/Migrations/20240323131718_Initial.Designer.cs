// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzeriaAPI.Domain.DbContext;

#nullable disable

namespace PizzeriaAPI.Domain.Migrations
{
    [DbContext(typeof(PizzeriaDbContext))]
    [Migration("20240323131718_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PizzeriaAPI.Domain.Entities.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("DeliveryAddress1")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("delivery_address1");

                    b.Property<string>("DeliveryAddress2")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("delivery_address2");

                    b.Property<string>("DeliveryCity")
                        .IsRequired()
                        .HasColumnType("varchar(55)")
                        .HasColumnName("delivery_city");

                    b.Property<string>("DeliveryZipcode")
                        .IsRequired()
                        .HasColumnType("varchar(25)")
                        .HasColumnName("delivery_zipcode");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("address");
                });

            modelBuilder.Entity("PizzeriaAPI.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(55)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(55)")
                        .HasColumnName("last_name");

                    b.HasKey("Id");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("PizzeriaAPI.Domain.Entities.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("item_category");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("item_name");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("Decimal")
                        .HasColumnName("item_price");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("item_size");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sku");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("items");
                });

            modelBuilder.Entity("PizzeriaAPI.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("row_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime")
                        .HasColumnName("created_at");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("customer_id");

                    b.Property<bool>("Delivery")
                        .HasColumnType("bit")
                        .HasColumnName("delivery");

                    b.Property<Guid>("DeliveryAddressId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("delivery_address_id");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("item_id");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("order_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("RowId");

                    b.HasIndex("CustomerId");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("PizzeriaAPI.Domain.Entities.Address", b =>
                {
                    b.HasOne("PizzeriaAPI.Domain.Entities.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("PizzeriaAPI.Domain.Entities.Item", b =>
                {
                    b.HasOne("PizzeriaAPI.Domain.Entities.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("PizzeriaAPI.Domain.Entities.Order", b =>
                {
                    b.HasOne("PizzeriaAPI.Domain.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("PizzeriaAPI.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
